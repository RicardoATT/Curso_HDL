# Copyright (C) 2018  Intel Corporation. All rights reserved.
# Your use of Intel Corporation's design tools, logic functions 
# and other software and tools, and its AMPP partner logic 
# functions, and any output files from any of the foregoing 
# (including device programming or simulation files), and any 
# associated documentation or information are expressly subject 
# to the terms and conditions of the Intel Program License 
# Subscription Agreement, the Intel Quartus Prime License Agreement,
# the Intel FPGA IP License Agreement, or other applicable license
# agreement, including, without limitation, that your use is for
# the sole purpose of programming logic devices manufactured by
# Intel and sold by Intel or its authorized distributors.  Please
# refer to the applicable agreement for further details.


# ***************************************************************************
# ***************************************************************************
# 
# File:		C:/Users/Usuario/Documents/RATT_repositorios/Curso_HDL/Proyectos/Counter_Full/simulation/modelsim/Counter_Full_dump_all_vcd_nodes.tcl
# 
# Description:	Script for ModelSim-Altera (Verilog) VCD File Dumping
# 		This script is used to direct ModelSim-Altera (Verilog) to dump
# 		all nodes in the design to a VCD output file
# 
# Usages:	C:/Users/Usuario/Documents/RATT_repositorios/Curso_HDL/Proyectos/Counter_Full/simulation/modelsim/Counter_Full_dump_all_vcd_nodes.tcl
# 
# Generated by:	Quartus Prime
# 		Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition
# 
# Date:		Fri Apr 12 19:59:36 2024
# 
# Design:	Counter_Full
# 
# ***************************************************************************
# ***************************************************************************

# ----------------------------------------------------------------
#
proc add_vcd_signals { hierarchy vcd_filename } {
#
# Description:	This function directs ModelSim-Altera (Verilog) to print out the
#		appropriate VCD signals, with the hierarchy level
#		prepended to each signal name
#
# ----------------------------------------------------------------

   catch { vcd add "$hierarchy/Add0_a0_combout" }
   catch { vcd add "$hierarchy/Add0_a1" }
   catch { vcd add "$hierarchy/Add1_a0_combout" }
   catch { vcd add "$hierarchy/Add1_a1" }
   catch { vcd add "$hierarchy/Add0_a2_combout" }
   catch { vcd add "$hierarchy/Add0_a3" }
   catch { vcd add "$hierarchy/Add1_a2_combout" }
   catch { vcd add "$hierarchy/Add1_a3" }
   catch { vcd add "$hierarchy/Add1_a4_combout" }
   catch { vcd add "$hierarchy/Add1_a5" }
   catch { vcd add "$hierarchy/Add0_a5_combout" }
   catch { vcd add "$hierarchy/Add0_a6" }
   catch { vcd add "$hierarchy/Add0_a7_combout" }
   catch { vcd add "$hierarchy/Add0_a8" }
   catch { vcd add "$hierarchy/Add1_a6_combout" }
   catch { vcd add "$hierarchy/Add1_a7" }
   catch { vcd add "$hierarchy/Add0_a9_combout" }
   catch { vcd add "$hierarchy/Add0_a10" }
   catch { vcd add "$hierarchy/Add1_a8_combout" }
   catch { vcd add "$hierarchy/Add1_a9" }
   catch { vcd add "$hierarchy/Add0_a11_combout" }
   catch { vcd add "$hierarchy/Add0_a12" }
   catch { vcd add "$hierarchy/Add1_a10_combout" }
   catch { vcd add "$hierarchy/Add1_a11" }
   catch { vcd add "$hierarchy/Add1_a12_combout" }
   catch { vcd add "$hierarchy/Add1_a13" }
   catch { vcd add "$hierarchy/Add0_a13_combout" }
   catch { vcd add "$hierarchy/Add0_a14" }
   catch { vcd add "$hierarchy/Add1_a14_combout" }
   catch { vcd add "$hierarchy/Add0_a15_combout" }
   catch { vcd add "$hierarchy/Count_Out_a0_a_areg0_q" }
   catch { vcd add "$hierarchy/Count_Out_a1_a_areg0_q" }
   catch { vcd add "$hierarchy/Count_Out_a2_a_areg0_q" }
   catch { vcd add "$hierarchy/Count_Out_a3_a_areg0_q" }
   catch { vcd add "$hierarchy/Count_Out_a4_a_areg0_q" }
   catch { vcd add "$hierarchy/Count_Out_a5_a_areg0_q" }
   catch { vcd add "$hierarchy/Count_Out_a6_a_areg0_q" }
   catch { vcd add "$hierarchy/Count_Out_a7_a_areg0_q" }
   catch { vcd add "$hierarchy/Count_Out_a6_combout" }
   catch { vcd add "$hierarchy/Equal1_a0_combout" }
   catch { vcd add "$hierarchy/Count_Out_a0_a_a7_combout" }
   catch { vcd add "$hierarchy/Count_Out_a0_a_a8_combout" }
   catch { vcd add "$hierarchy/Count_Out_a9_combout" }
   catch { vcd add "$hierarchy/Count_Out_a10_combout" }
   catch { vcd add "$hierarchy/Count_Out_a11_combout" }
   catch { vcd add "$hierarchy/Equal1_a1_combout" }
   catch { vcd add "$hierarchy/Add0_a4_combout" }
   catch { vcd add "$hierarchy/Count_Out_a12_combout" }
   catch { vcd add "$hierarchy/Count_Out_a13_combout" }
   catch { vcd add "$hierarchy/Count_Out_a14_combout" }
   catch { vcd add "$hierarchy/Count_Out_a15_combout" }
   catch { vcd add "$hierarchy/Count_Out_a16_combout" }
   catch { vcd add "$hierarchy/Count_Out_a17_combout" }
   catch { vcd add "$hierarchy/Count_Out_a18_combout" }
   catch { vcd add "$hierarchy/Count_Out_a19_combout" }
   catch { vcd add "$hierarchy/Count_Out_a20_combout" }
   catch { vcd add "$hierarchy/Count_Out_a21_combout" }
   catch { vcd add "$hierarchy/Count_Out_a22_combout" }
   catch { vcd add "$hierarchy/Count_Out_a23_combout" }
   catch { vcd add "$hierarchy/Count_Out_a0_a_aoutput_o" }
   catch { vcd add "$hierarchy/Count_Out_a1_a_aoutput_o" }
   catch { vcd add "$hierarchy/Count_Out_a2_a_aoutput_o" }
   catch { vcd add "$hierarchy/Count_Out_a3_a_aoutput_o" }
   catch { vcd add "$hierarchy/Count_Out_a4_a_aoutput_o" }
   catch { vcd add "$hierarchy/Count_Out_a5_a_aoutput_o" }
   catch { vcd add "$hierarchy/Count_Out_a6_a_aoutput_o" }
   catch { vcd add "$hierarchy/Count_Out_a7_a_aoutput_o" }
   catch { vcd add "$hierarchy/Count_In_a0_a_ainput_o" }
   catch { vcd add "$hierarchy/LD_ainput_o" }
   catch { vcd add "$hierarchy/Up_Down_ainput_o" }
   catch { vcd add "$hierarchy/CLK_ainput_o" }
   catch { vcd add "$hierarchy/RST_ainput_o" }
   catch { vcd add "$hierarchy/CE_ainput_o" }
   catch { vcd add "$hierarchy/Count_In_a1_a_ainput_o" }
   catch { vcd add "$hierarchy/Count_In_a2_a_ainput_o" }
   catch { vcd add "$hierarchy/Count_In_a3_a_ainput_o" }
   catch { vcd add "$hierarchy/Count_In_a4_a_ainput_o" }
   catch { vcd add "$hierarchy/Count_In_a5_a_ainput_o" }
   catch { vcd add "$hierarchy/Count_In_a6_a_ainput_o" }
   catch { vcd add "$hierarchy/Count_In_a7_a_ainput_o" }
}

# ----------------------------------------------------------------
#
proc main { argv } {
#
# Description:	Main entry point to script.  Iterate over all
#		hierarchy levels specified, and direct ModelSim-Altera (Verilog)
#		to print the relevant signals under each level
#
# ----------------------------------------------------------------

   set vcd_filename "Counter_Full.vcd"
   set hierarchy "i1"

   vcd file "$vcd_filename"
   vcd on

   add_vcd_signals $hierarchy $vcd_filename
}

main $argv
