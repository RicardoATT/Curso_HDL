// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "03/12/2024 03:36:15"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 100 ns/ 1 ps

module Full_Adder_Verilog (
	A,
	B,
	Cin,
	Sum,
	Cout);
input 	A;
input 	B;
input 	Cin;
output 	Sum;
output 	Cout;

// Design Ports Information
// Sum	=>  Location: PIN_V2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Cout	=>  Location: PIN_V1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A	=>  Location: PIN_V3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B	=>  Location: PIN_V4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Cin	=>  Location: PIN_U2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("Full_Adder_Verilog_7_1200mv_85c_v_slow.sdo");
// synopsys translate_on

wire Sum_aoutput_o;
wire Cout_aoutput_o;
wire B_ainput_o;
wire A_ainput_o;
wire Cin_ainput_o;
wire Sum_a0_combout;
wire Cout_a0_combout;

wire Sum_aoutput_I_driver;
wire Cout_aoutput_I_driver;
wire B_ainput_I_driver;
wire A_ainput_I_driver;
wire Cin_ainput_I_driver;
wire Sum_a0_DATAA_driver;
wire Sum_a0_DATAB_driver;
wire Sum_a0_DATAD_driver;
wire Cout_a0_DATAA_driver;
wire Cout_a0_DATAB_driver;
wire Cout_a0_DATAD_driver;

hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

cycloneive_routing_wire Sum_aoutput_I_routing_wire_inst (
	.datain(Sum_a0_combout),
	.dataout(Sum_aoutput_I_driver));

// Location: IOOBUF_X0_Y28_N16
cycloneive_io_obuf Sum_aoutput(
	.i(Sum_aoutput_I_driver),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(Sum_aoutput_o),
	.obar());
// synopsys translate_off
defparam Sum_aoutput.bus_hold = "false";
defparam Sum_aoutput.open_drain_output = "false";
// synopsys translate_on

cycloneive_routing_wire Cout_aoutput_I_routing_wire_inst (
	.datain(Cout_a0_combout),
	.dataout(Cout_aoutput_I_driver));

// Location: IOOBUF_X0_Y28_N23
cycloneive_io_obuf Cout_aoutput(
	.i(Cout_aoutput_I_driver),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(Cout_aoutput_o),
	.obar());
// synopsys translate_off
defparam Cout_aoutput.bus_hold = "false";
defparam Cout_aoutput.open_drain_output = "false";
// synopsys translate_on

cycloneive_routing_wire B_ainput_I_routing_wire_inst (
	.datain(B),
	.dataout(B_ainput_I_driver));

// Location: IOIBUF_X0_Y29_N15
cycloneive_io_ibuf B_ainput(
	.i(B_ainput_I_driver),
	.ibar(gnd),
	.o(B_ainput_o));
// synopsys translate_off
defparam B_ainput.bus_hold = "false";
defparam B_ainput.simulate_z_as = "z";
// synopsys translate_on

cycloneive_routing_wire A_ainput_I_routing_wire_inst (
	.datain(A),
	.dataout(A_ainput_I_driver));

// Location: IOIBUF_X0_Y29_N22
cycloneive_io_ibuf A_ainput(
	.i(A_ainput_I_driver),
	.ibar(gnd),
	.o(A_ainput_o));
// synopsys translate_off
defparam A_ainput.bus_hold = "false";
defparam A_ainput.simulate_z_as = "z";
// synopsys translate_on

cycloneive_routing_wire Cin_ainput_I_routing_wire_inst (
	.datain(Cin),
	.dataout(Cin_ainput_I_driver));

// Location: IOIBUF_X0_Y30_N1
cycloneive_io_ibuf Cin_ainput(
	.i(Cin_ainput_I_driver),
	.ibar(gnd),
	.o(Cin_ainput_o));
// synopsys translate_off
defparam Cin_ainput.bus_hold = "false";
defparam Cin_ainput.simulate_z_as = "z";
// synopsys translate_on

cycloneive_routing_wire Sum_a0_DATAA_routing_wire_inst (
	.datain(B_ainput_o),
	.dataout(Sum_a0_DATAA_driver));

cycloneive_routing_wire Sum_a0_DATAB_routing_wire_inst (
	.datain(A_ainput_o),
	.dataout(Sum_a0_DATAB_driver));

cycloneive_routing_wire Sum_a0_DATAD_routing_wire_inst (
	.datain(Cin_ainput_o),
	.dataout(Sum_a0_DATAD_driver));

// Location: LCCOMB_X1_Y29_N16
cycloneive_lcell_comb Sum_a0(
// Equation(s):
// Sum_a0_combout = B_ainput_o $ (A_ainput_o $ (Cin_ainput_o))

	.dataa(Sum_a0_DATAA_driver),
	.datab(Sum_a0_DATAB_driver),
	.datac(gnd),
	.datad(Sum_a0_DATAD_driver),
	.cin(gnd),
	.combout(Sum_a0_combout),
	.cout());
// synopsys translate_off
defparam Sum_a0.lut_mask = 16'h9966;
defparam Sum_a0.sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_routing_wire Cout_a0_DATAA_routing_wire_inst (
	.datain(B_ainput_o),
	.dataout(Cout_a0_DATAA_driver));

cycloneive_routing_wire Cout_a0_DATAB_routing_wire_inst (
	.datain(A_ainput_o),
	.dataout(Cout_a0_DATAB_driver));

cycloneive_routing_wire Cout_a0_DATAD_routing_wire_inst (
	.datain(Cin_ainput_o),
	.dataout(Cout_a0_DATAD_driver));

// Location: LCCOMB_X1_Y29_N18
cycloneive_lcell_comb Cout_a0(
// Equation(s):
// Cout_a0_combout = (B_ainput_o & ((A_ainput_o) # (Cin_ainput_o))) # (!B_ainput_o & (A_ainput_o & Cin_ainput_o))

	.dataa(Cout_a0_DATAA_driver),
	.datab(Cout_a0_DATAB_driver),
	.datac(gnd),
	.datad(Cout_a0_DATAD_driver),
	.cin(gnd),
	.combout(Cout_a0_combout),
	.cout());
// synopsys translate_off
defparam Cout_a0.lut_mask = 16'hEE88;
defparam Cout_a0.sum_lutc_input = "datac";
// synopsys translate_on

assign Sum = Sum_aoutput_o;

assign Cout = Cout_aoutput_o;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_F4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_P3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_N7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_P28,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire a_aALTERA_ASDO_DATA1_a_apadout;
wire a_aALTERA_FLASH_nCE_nCSO_a_apadout;
wire a_aALTERA_DATA0_a_apadout;
wire a_aALTERA_ASDO_DATA1_a_aibuf_o;
wire a_aALTERA_FLASH_nCE_nCSO_a_aibuf_o;
wire a_aALTERA_DATA0_a_aibuf_o;

wire a_aALTERA_ASDO_DATA1_a_aibuf_I_driver;
wire a_aALTERA_FLASH_nCE_nCSO_a_aibuf_I_driver;
wire a_aALTERA_DATA0_a_aibuf_I_driver;

endmodule
